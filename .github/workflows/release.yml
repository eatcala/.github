name: Release

on:
  workflow_call:
    secrets:
      ci-token:
        required: true

jobs:
  npm:
    outputs:
      next-version: ${{ steps.semantic.outputs.nextVersion }}
    name: npm release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://npm.pkg.github.com'
          scope: '@eatcala'
      - run: npm ci --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.ci-token }}
      - name: Run semantic-release
        id: semantic
        env:
          GH_TOKEN: ${{ secrets.ci-token }}
          NODE_AUTH_TOKEN: ${{ secrets.ci-token }}
        run: |
          npx semantic-release
          
  docker:
    needs: npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://npm.pkg.github.com'
          scope: '@eatcala'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ needs.npm.outputs.next-version }}
            type=raw,value=gha-${{ github.run_id }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ci-token }}
      - name: Build and push
        id: docker_build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.ci-token }}
        uses: docker/build-push-action@v3
        with:
          context: .
          target: runner
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NODE_AUTH_TOKEN=${{ secrets.ci-token }}
